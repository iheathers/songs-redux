{"version":3,"sources":["reducers/index.js","components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","index.js"],"names":["combineReducers","songs","title","duration","selectedSong","action","type","payload","SongList","renderList","props","map","song","className","key","onClick","selectSong","this","Component","connect","state","console","log","class","App","ReactDOM","render","store","createStore","reducers","document","getElementById"],"mappings":"4MAkBeA,cAAgB,CAC3BC,MAjBoB,WACrB,MAAO,CACH,CAACC,MAAO,YAAcC,SAAU,QAChC,CAACD,MAAO,qBAAsBC,SAAU,QACxC,CAACD,MAAO,iBAAkBC,SAAU,QACpC,CAACD,MAAO,eAAgBC,SAAU,UAarCC,aATwB,WAAgC,IAA/BA,EAA8B,uDAAjB,KAAMC,EAAW,uCACvD,MAAoB,kBAAhBA,EAAOC,KACAD,EAAOE,QAEXH,K,+BCXLI,E,4MAEJC,WAAa,WACX,OAAO,EAAKC,MAAMT,MAAMU,KAAI,SAACC,GAC3B,OACE,yBAAKC,UAAU,OAAOC,IAAKF,EAAKV,OAC9B,yBAAKW,UAAU,yBACb,4BAAQA,UAAU,oBAAoBE,QAAS,kBAAM,EAAKL,MAAMM,WAAWJ,KAA3E,gBAEF,yBAAKC,UAAU,WAAWD,EAAKV,Y,uDAOrC,OACE,yBAAKW,UAAU,kCAAkCI,KAAKR,kB,GAjBrCS,aA2BRC,eALU,SAACC,GAExB,MAAO,CAAEnB,MAAOmB,EAAMnB,SAGiB,CACrCe,WC/BsB,SAACJ,GACvB,MAAO,CACHN,KAAM,gBACNC,QAASK,KD2BFO,CAEZX,GEHYW,eAJS,SAACC,GACvB,MAAO,CAAER,KAAMQ,EAAMhB,gBAGRe,EA3BI,SAACT,GAElB,OADAW,QAAQC,IAAIZ,GACRA,EAAME,KAEN,yBAAKC,UAAU,WACb,yBAAKU,MAAM,WACT,yBAAKA,MAAM,UAAX,kBAEF,yBAAKV,UAAU,WACb,wBAAIU,MAAM,iBAAV,UAAkCb,EAAME,KAAKV,OAC7C,yBAAKqB,MAAM,WACX,wCAAcb,EAAME,KAAKT,aAQ/B,iDCHWqB,EAfH,WACV,OACE,yBAAKX,UAAU,gBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,qBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,oBACb,kBAAC,EAAD,UCJVY,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IAC3B,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b2515e1b.chunk.js","sourcesContent":["import { combineReducers } from 'redux'\r\n\r\nconst songListReducer = () => {\r\n   return [\r\n       {title: 'Narisauna' , duration: '4:00'},\r\n       {title: 'Bhanai-Tribal Rain', duration: '5:04' },\r\n       {title: 'Juinu nai hola', duration: '3:55' },\r\n       {title: 'Walk with me', duration: '4:44'}\r\n   ]\r\n}\r\n\r\nconst selectedSongReducer = (selectedSong=null, action) => {\r\n    if (action.type === 'SELECTED_SONG'){\r\n        return action.payload\r\n    }\r\n    return selectedSong\r\n}\r\n\r\nexport default combineReducers({\r\n    songs: songListReducer,\r\n    selectedSong: selectedSongReducer\r\n});","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectSong } from '../actions';\r\n\r\nclass SongList extends Component {  \r\n\r\n  renderList = () => {\r\n    return this.props.songs.map((song) => {\r\n      return (\r\n        <div className=\"item\" key={song.title}>\r\n          <div className=\"right floated content\">\r\n            <button className=\"ui button primary\" onClick={() => this.props.selectSong(song)}>Show Detail</button>\r\n          </div>\r\n          <div className=\"content\">{song.title}</div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {      \r\n    return (\r\n      <div className=\"ui middle aligned divided list\">{this.renderList()}</div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapsStateToProps = (state) => {\r\n    \r\n  return { songs: state.songs };\r\n};\r\n\r\nexport default connect(mapsStateToProps, {\r\n    selectSong\r\n})(SongList);\r\n","// Action creator\r\nexport const selectSong = (song) => {\r\n    return { // Action \r\n        type: 'SELECTED_SONG',\r\n        payload: song\r\n    }\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst SongDetail = (props) => {\r\n  console.log(props);\r\n  if (props.song) {\r\n    return (\r\n      <div className=\"ui card\">\r\n        <div class=\"content\">\r\n          <div class=\"header\">Details For: </div>\r\n        </div>\r\n        <div className=\"content\">\r\n          <h4 class=\"ui sub header\">Title: {props.song.title}</h4>\r\n          <div class=\"summary\">\r\n          <p>Duration: {props.song.duration}</p>\r\n        </div>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>Select a Song</div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { song: state.selectedSong };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SongDetail);\r\n","import React from \"react\";\r\nimport SongList from \"./SongList\";\r\nimport SongDetail from \"./SongDetail\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui grid\">\r\n        <div className=\"eight wide column\">\r\n          <SongList />\r\n        </div>\r\n        <div className=\"four wide column\">\r\n          <SongDetail />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\n\r\nimport reducers from \"./reducers\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <Provider store={createStore(reducers)}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}